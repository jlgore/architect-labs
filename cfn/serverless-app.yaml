AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless API with Lambda, API Gateway, and RDS

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: Environment name
    
  LambdaRuntime:
    Type: String
    Default: nodejs18.x
    AllowedValues:
      - nodejs16.x
      - nodejs18.x
    Description: Lambda function runtime

  DBUsername:
    Type: String
    Default: dbadmin
    Description: Username for the database
    NoEcho: true
    
  DBPassword:
    Type: String
    Description: Password for the database
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters

Resources:
  # API Gateway REST API
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,X-Api-Key'"
        AllowOrigin: "'*'"
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 5

  # Single Lambda Function using Hono
  HonoApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Environment}-hono-api"
      Handler: index.handler
      Runtime: !Ref LambdaRuntime
      CodeUri: ./lambda/hono-api/
      Timeout: 30
      MemorySize: 256
      Environment:
        Variables:
          DB_HOST: !GetAtt Database.Endpoint.Address
          DB_PORT: !GetAtt Database.Endpoint.Port
          DB_NAME: appdatabase
          DB_USER: !Ref DBUsername
          DB_PASSWORD: !Ref DBPassword
          ENVIRONMENT: !Ref Environment
      Events:
        GetItems:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items
            Method: GET
        CreateItem:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items
            Method: POST
        GetItemById:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items/{id}
            Method: GET
        UpdateItem:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items/{id}
            Method: PUT
        DeleteItem:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items/{id}
            Method: DELETE
        Options:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items
            Method: OPTIONS
        OptionsWithId:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /items/{id}
            Method: OPTIONS

  # RDS Database
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable database access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: appdatabase
      Engine: mysql
      EngineVersion: 8.0.28
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !GetAtt DatabaseSecurityGroup.GroupId
      Tags:
        - Key: Environment
          Value: !Ref Environment

# Conditions for conditional resource creation
Conditions:
  IsProd: !Equals [!Ref Environment, "prod"]

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
    Export:
      Name: !Sub "${Environment}-ApiEndpoint"
      
  HonoApiFunctionName:
    Description: Hono API Lambda function name
    Value: !Ref HonoApiFunction
    Export:
      Name: !Sub "${Environment}-HonoApiFunction"
      
  DatabaseEndpoint:
    Description: RDS Database endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub "${Environment}-DatabaseEndpoint"
      
  DatabasePort:
    Description: RDS Database port
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub "${Environment}-DatabasePort" 