AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless API with Lambda, API Gateway, and RDS

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: Environment name
    
  LambdaRuntime:
    Type: String
    Default: nodejs18.x
    AllowedValues:
      - nodejs16.x
      - nodejs18.x
    Description: Lambda function runtime
    
  DBUsername:
    Type: String
    Default: dbadmin
    Description: Username for the database
    NoEcho: true
    
  DBPassword:
    Type: String
    Description: Password for the database
    NoEcho: true
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters

Resources:
  # API Gateway REST API
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${Environment}-items-api"
      Description: API for managing items
  
  # API Gateway Resources and Methods
  ItemsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGateway
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: "items"
  
  GetItemsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref ItemsResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: HTTP
        IntegrationHttpMethod: GET
        Uri: !Sub "http://${Database.Endpoint.Address}:${Database.Endpoint.Port}/appdatabase/items"
        PassthroughBehavior: WHEN_NO_MATCH
        RequestTemplates:
          application/json: '{"statusCode": 200}'
        IntegrationResponses:
          - StatusCode: 200
            ResponseTemplates:
              application/json: '{"items": []}'
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: "Empty"
  
  # API Deployment
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: GetItemsMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: !Ref Environment
  
  # RDS Database
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: appdatabase
      Engine: mysql
      EngineVersion: 8.0.28
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: true
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
    Export:
      Name: !Sub "${Environment}-ApiEndpoint"
      
  DatabaseEndpoint:
    Description: RDS Database endpoint
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: !Sub "${Environment}-DatabaseEndpoint"
      
  DatabasePort:
    Description: RDS Database port
    Value: !GetAtt Database.Endpoint.Port
    Export:
      Name: !Sub "${Environment}-DatabasePort" 